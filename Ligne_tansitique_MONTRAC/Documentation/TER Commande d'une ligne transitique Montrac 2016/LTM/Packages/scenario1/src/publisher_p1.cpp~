#include "ros/ros.h"
#include "std_msgs/String.h"
#include <sstream>
#include <modbus/modbus.h>

int main(int argc, char **argv)
{

  ros::init(argc, argv, "etat_navette");

  ros::NodeHandle n;

  ros::Publisher chatter_pub = n.advertise<std_msgs::String>("etat_navette", 1000);

  ros::Rate loop_rate(2);

  
  while (ros::ok())
  {
    
    std_msgs::String msg;


    modbus_t *ctx;
    int i;
    int retour;
    uint16_t demande11, demande12;

    demande11 =11;
    demande12 = 12;

    ctx = modbus_new_tcp("192.168.0.101", 502);
    modbus_connect(ctx);


    std::stringstream ss;
    ss << "hello world " << count;
    msg.data = ss.str();

    ROS_INFO("%s", msg.data.c_str());
 
    chatter_pub.publish(msg);

    ros::spinOnce();

    loop_rate.sleep();
    ++count;
  }


  return 0;
}
