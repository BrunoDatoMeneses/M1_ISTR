#include "ros/ros.h"
#include <sstream>
#include "scenario1/EtatZone.h"
#include <modbus/modbus.h>

#define ADDR_ETAT_P1 0
#define ADDR_ETAT_P2 1

int main(int argc, char **argv)
{

  ros::init(argc, argv, "publisher_zone2");

  ros::NodeHandle n;

  ros::Publisher chatter_pub = n.advertise<scenario1::EtatZone>("etat_zone2", 1000);

  ros::Rate loop_rate(1);

  
  while (ros::ok())
  {
    
    scenario1::EtatZone msg_etat_poste;
    std::stringstream etat_p1, etat_p2;

    modbus_t *ap1;
	uint16_t tab_etat_p1[1], tab_etat_p2[1];
    
    ap1 = modbus_new_tcp("192.168.0.102", 502);
    modbus_connect(ap1);

    if (modbus_read_registers(ap1, ADDR_ETAT_P1, 1, tab_etat_p1) > 0) {
		msg_etat_poste.etat_p1 = tab_etat_p1[0];
		ROS_INFO("Passage etat p1 : %ld", msg_etat_poste.etat_p1);		
	}
	else
		ROS_INFO("Erreur etat p1");
	

    if (modbus_read_registers(ap1, ADDR_ETAT_P2, 1, tab_etat_p2) > 0) {
		msg_etat_poste.etat_p2 = tab_etat_p2[0];
		ROS_INFO("Passage etat p2 : %ld", msg_etat_poste.etat_p2);		
	}
	else
		ROS_INFO("Erreur etat p2");
	

    chatter_pub.publish(msg_etat_poste);

    loop_rate.sleep();

	}
 	return 0;
}
